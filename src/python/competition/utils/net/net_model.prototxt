// Specifies the model used for classification

name: "net_model"
input: "data"

// input_dim: batch size x feature dimension x height x width

// Batch size for classifications
input_dim: 1
// Feature dimension. Example: RGB uses 3.
input_dim: 1
// Height/width of input vector/image
input_dim: 27136
input_dim: 1

layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "data"
  top: "fc1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 40
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "fc1"
  top: "fc1"
}
layer {
  name: "fc2"
  type: "InnerProduct"
  bottom: "fc1"
  top: "fc2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

// Probability layer that pycaffe returns
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc2"
  top: "prob"
}


